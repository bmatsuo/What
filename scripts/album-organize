#!/usr/bin/env perl

# Use perldoc or option --man to read documentation

########################################################################
# MODULES
########################################################################

# Include core modules.
use strict;
use warnings;
use File::Basename;
use Carp;

# Include CPAN modules.
use Getopt::Euclid qw{ :vars<opt_> };
use Readonly;

# Include private modules.
# ...

our $VERSION = '0.0_1';

########################################################################
# GENERAL GLOBAL VARIABLES
########################################################################

# Basic program information.
Readonly my $prog_incantation  => $0;
Readonly my $prog_dir          => dirname($0);
Readonly my $prog_name         => basename($0);

# Command-line option hash.
my %opt = %ARGV;

# Global program exitcode.
my $exitcode = 0;

########################################################################
# PROGRAM SPECIFIC GLOBALS
########################################################################

########################################################################
# MAIN FUNCTION
########################################################################

# main() - main program execution 
sub main{
    my $album_path = $opt{'<album-dir>'};

    croak("Not a directory; $album_path") if !-d $album_path;

    my $album_base = basename($album_path);
    $album_path =~ s! / \z !!xms;

    my $flac_dir =  "$album_path/$album_base [FLAC]";

    croak("FLAC audio folder does not exist; $flac_dir") 
        if !-d $flac_dir;

    my @segregate_cmd 
        = ('segregate-mp3', '-s', $flac_dir, '-t', $album_path);

    system(@segregate_cmd) == 0
        or croak("Couldn't organize;\n $?");

    exit($exitcode);
}

########################################################################
# SUPPORTING SUBROUTINES
########################################################################


# Finally, kickstart the script
main();

__END__

=head1 NAME

album-organize
-- short description

=head1 VERSION

Version 0.0_1
Originally created on 07/07/10 19:17:54

=head1 USAGE

album-organize [options]

=head1 REQUIRED ARGUMENTS

=over

=item <album-dir>

Root directory of an album.

=back

=head1 OPTIONS

=over

=item --version

=item --usage

=item --help

=item --man

Print the usual program information

=back

=head1 DESCRIPTION

Takes a directory which has a subdirectory filled with FLAC audio files
and MP3 transcodes. The transcodes will be grouped into subdirectories.

=head1 EXAMPLES

Lets say we have an album at path "/path/to/album".

album-organize then looks for the subdirectory 
"/path/to/album/album [FLAC]" and organized any mp3s inside of it.

Say that /path/to/album contains VBR V2 mp3 files, then a directory 
'/path/to/album/album [V2]'
will be created and all V2 files will be moved there by album-organize.

=head1 BUGS

=over

=back

=head1 AUTHOR & COPYRIGHT 

Â©Bryan Matsuo (bryan.matsuo@gmail.com)

