#!/usr/bin/env perl

# Use perldoc or option --man to read documentation

########################################################################
# MODULES
########################################################################

# Include core modules.
use strict;
use warnings;
use File::Basename;
use File::Glob qw{bsd_glob};
use Carp;

# Include CPAN modules.
use Getopt::Euclid qw{ :vars<opt_> };

# Include private modules.
use What::WhatRC;
use What::Release;
use What::Release::Directory;
use What::Context;
use What::M3U;
use What::Utils;

########################################################################
# GENERAL GLOBAL VARIABLES
########################################################################

# Basic program information.
my $prog_incantation  = $0;
my $prog_dir          = dirname($0);
my $prog_name         = basename($0);

# Command-line option hash.
my %opt = %ARGV;

# Global program exitcode.
my $exitcode = 0;

########################################################################
# PROGRAM SPECIFIC GLOBALS
########################################################################

########################################################################
# MAIN FUNCTION
########################################################################

# main() - main program execution 
sub main{
    load_context();
    my $rip_dir = whatrc->rip_dir;
    my $artist = context->artist;
    my $title = context->title;
    my $year = context->year;
    my $release = release();
    my $m3u_base = $release->name();

    my $rip = scan_rip_dir();

    # Create M3U files for the disc directories.
    for my $disc ($rip->discs) {
        # Look for existing playlists.
        if ( $disc->has_m3u() ) {
            my $name = $disc->name;
            $name = "release directory" if defined ($name) && ($name eq q{});
            print "M3U found in $name. Skipping.\n" if $opt{'--verbose'};
            next;
        }

        # Generate a name for a disc playlist.
        my $m3u_name = $disc->name;
        $m3u_name = ($m3u_name && $m3u_name =~ m/./xms) ? "$m3u_base - $m3u_name.m3u"
            : "$m3u_base.m3u";
        my $m3u_path = sprintf "%s/%s", $disc->path, $m3u_name;

        # Create the disc playlist.
        print "Creating playlist $m3u_path ... " if $opt{'--verbose'};
        open my $m3u, ">", $m3u_path
            or die "Couldn't open M3U file $m3u_path";
        print {$m3u} mkm3u(files => $disc->songs);
        close $m3u;
        print "Done.\n" if $opt{'--verbose'};
    }

    for my $dir ($rip->dirs(sub {my $r = shift; !$r->is_disc && $r->contains_discs()})) {
        # Look for existing playlists.
        if ( $dir->has_m3u() ) {
            my $name = $dir->name;
            $name = "release directory" if !defined $name || $name eq q{};
            print "M3U found in $name. Skipping.\n" if $opt{'--verbose'};
            next;
        }

        # Generate a name for a disc playlist.
        my $m3u_name = $dir->name || q{};
        $m3u_name 
            = $m3u_name =~ m/./xms ? "$m3u_base - $m3u_name.m3u"
            : "$m3u_base.m3u";
        my $m3u_path = sprintf "%s/%s", $dir->path, $m3u_name;

        # Create the disc playlist.
        print "Creating playlist $m3u_path ... " if $opt{'--verbose'};
        open my $m3u, ">", $m3u_path
            or die "Couldn't open M3U file $m3u_path";
        print {$m3u} mkm3u(files => [$dir->audio_files()]);
        close $m3u;
        print "Done.\n" if $opt{'--verbose'};
    }
    exit($exitcode);
}

########################################################################
# SUPPORTING SUBROUTINES
########################################################################


# Finally, kickstart the script
main();

__END__

=head1 NAME

release-mkm3u
-- Create any missing M3U files for discs in the rip dir.

=head1 VERSION

Version 0.0_1
Originally created on 09/19/10 01:25:00

=head1 USAGE

release-mkm3u [options]

=head1 REQUIRED ARGUMENTS

=over

=back

=head1 OPTIONS

=over

=item --verbose

=item --version

=item --usage

=item --help

=item --man

Print the usual program information

=back

=head1 DESCRIPTION

Find all disc directories in the rip directory, and make m3u playlists for them.

Playlists are stored in the respective disc directories.

The playlists are named based on the current What context.

=head1 BUGS

=over

=back

=head1 AUTHOR & COPYRIGHT 

Â© The What team.

